{"version":3,"file":"js/692.3a093185.js","mappings":"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","sources":["webpack://DOUJI.AI/../src/Layout.ts","webpack://DOUJI.AI/./node_modules/@solana/buffer-layout/node_modules/buffer/index.js","webpack://DOUJI.AI/./node_modules/@solana/web3.js/node_modules/buffer/index.js","webpack://DOUJI.AI/./node_modules/base-x/src/index.js","webpack://DOUJI.AI/./node_modules/bigint-buffer/dist/browser.js","webpack://DOUJI.AI/./node_modules/borsh/lib/index.js","webpack://DOUJI.AI/./node_modules/bs58/index.js","webpack://DOUJI.AI/./node_modules/jayson/lib/client/browser/index.js","webpack://DOUJI.AI/./node_modules/jayson/lib/generateRequest.js","webpack://DOUJI.AI/./node_modules/rpc-websockets/dist/lib/client.js","webpack://DOUJI.AI/./node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","webpack://DOUJI.AI/./node_modules/rpc-websockets/node_modules/eventemitter3/index.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/createClass.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/inherits.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/helpers/typeof.js","webpack://DOUJI.AI/./node_modules/@babel/runtime/regenerator/index.js","webpack://DOUJI.AI/../src/_assert.ts","webpack://DOUJI.AI/../src/crypto.ts","webpack://DOUJI.AI/../src/utils.ts","webpack://DOUJI.AI/../src/_sha2.ts","webpack://DOUJI.AI/../src/_u64.ts","webpack://DOUJI.AI/../src/sha512.ts","webpack://DOUJI.AI/../../src/abstract/utils.ts","webpack://DOUJI.AI/../../src/abstract/modular.ts","webpack://DOUJI.AI/../../src/abstract/curve.ts","webpack://DOUJI.AI/../../src/abstract/edwards.ts","webpack://DOUJI.AI/../src/ed25519.ts","webpack://DOUJI.AI/../src/sha256.ts","webpack://DOUJI.AI/../src/error.ts","webpack://DOUJI.AI/../src/struct.ts","webpack://DOUJI.AI/../src/structs/utilities.ts","webpack://DOUJI.AI/../src/structs/types.ts","webpack://DOUJI.AI/../src/structs/coercions.ts","webpack://DOUJI.AI/../src/sha3.ts","webpack://DOUJI.AI/../src/hmac.ts","webpack://DOUJI.AI/../../src/abstract/weierstrass.ts","webpack://DOUJI.AI/../src/_shortw_utils.ts","webpack://DOUJI.AI/../src/secp256k1.ts","webpack://DOUJI.AI/../src/utils/ed25519.ts","webpack://DOUJI.AI/../src/utils/to-buffer.ts","webpack://DOUJI.AI/../src/utils/borsh-schema.ts","webpack://DOUJI.AI/../src/publickey.ts","webpack://DOUJI.AI/../src/bpf-loader-deprecated.ts","webpack://DOUJI.AI/../src/transaction/constants.ts","webpack://DOUJI.AI/../src/transaction/expiry-custom-errors.ts","webpack://DOUJI.AI/../src/message/account-keys.ts","webpack://DOUJI.AI/../src/layout.ts","webpack://DOUJI.AI/../src/utils/shortvec-encoding.ts","webpack://DOUJI.AI/../src/utils/assert.ts","webpack://DOUJI.AI/../src/message/compiled-keys.ts","webpack://DOUJI.AI/../src/message/legacy.ts","webpack://DOUJI.AI/../src/message/v0.ts","webpack://DOUJI.AI/../src/transaction/legacy.ts","webpack://DOUJI.AI/../src/timing.ts","webpack://DOUJI.AI/../src/sysvar.ts","webpack://DOUJI.AI/../src/utils/send-and-confirm-transaction.ts","webpack://DOUJI.AI/../src/utils/sleep.ts","webpack://DOUJI.AI/../src/instruction.ts","webpack://DOUJI.AI/../src/fee-calculator.ts","webpack://DOUJI.AI/../src/nonce-account.ts","webpack://DOUJI.AI/../src/utils/bigint.ts","webpack://DOUJI.AI/../src/programs/system.ts","webpack://DOUJI.AI/../src/loader.ts","webpack://DOUJI.AI/../src/bpf-loader.ts","webpack://DOUJI.AI/../../../node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","webpack://DOUJI.AI/../src/epoch-schedule.ts","webpack://DOUJI.AI/../src/errors.ts","webpack://DOUJI.AI/../src/__forks__/browser/fetch-impl.ts","webpack://DOUJI.AI/../src/rpc-websocket.ts","webpack://DOUJI.AI/../src/account-data.ts","webpack://DOUJI.AI/../src/programs/address-lookup-table/state.ts","webpack://DOUJI.AI/../src/utils/makeWebsocketUrl.ts","webpack://DOUJI.AI/../src/connection.ts","webpack://DOUJI.AI/../src/keypair.ts","webpack://DOUJI.AI/../src/programs/address-lookup-table/index.ts","webpack://DOUJI.AI/../src/programs/compute-budget.ts","webpack://DOUJI.AI/../src/programs/ed25519.ts","webpack://DOUJI.AI/../src/utils/secp256k1.ts","webpack://DOUJI.AI/../src/programs/secp256k1.ts","webpack://DOUJI.AI/../src/programs/stake.ts","webpack://DOUJI.AI/../src/programs/vote.ts","webpack://DOUJI.AI/../src/validator-info.ts","webpack://DOUJI.AI/../src/vote-account.ts","webpack://DOUJI.AI/../src/solana-wallet.ts","webpack://DOUJI.AI/./node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _eventemitter = require(\"eventemitter3\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n// @ts-ignore\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n  var _super = _createSuper(CommonClient);\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n    var _a$autoconnect = _a.autoconnect,\n      autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n      _a$reconnect = _a.reconnect,\n      reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n      _a$reconnect_interval = _a.reconnect_interval,\n      reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n      _a$max_reconnects = _a.max_reconnects,\n      max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n      rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n        var rpc_id = _this2.generate_request_id(method, params);\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n              case 2:\n                resp = _context.sent;\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n                throw new Error(\"authentication failed\");\n              case 5:\n                return _context.abrupt(\"return\", resp);\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n              case 3:\n                result = _context3.sent;\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n              case 6:\n                return _context3.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n              case 3:\n                result = _context4.sent;\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n              case 6:\n                return _context4.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n        _this4.emit(\"open\");\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        }\n        // check if any listeners are attached and forward event\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else\n            // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            }\n          // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n          return;\n        }\n        // reject early since server's response is invalid\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n          reason = _ref2.reason;\n        if (_this4.ready)\n          // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _eventemitter = require(\"eventemitter3\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n  var _super = _createSuper(WebSocketBrowserImpl);\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,"/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n",null,null,null,null,null,"import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      } as Intl.CollatorOptions;\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  (typeof SolanaJSONRPCErrorCode)[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport RpcWebSocketBrowserFactory from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport {\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n} from 'rpc-websockets/dist/lib/client/client.types';\n\nimport createRpc from './rpc-websocket-factory';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends RpcWebSocketCommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = (\n          rpc as ReturnType<typeof RpcWebSocketBrowserFactory>\n        ).socket;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<RpcWebSocketCommonClient['call']>\n  ): ReturnType<RpcWebSocketCommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<RpcWebSocketCommonClient['notify']>\n  ): ReturnType<RpcWebSocketCommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\nexport type IsBlockhashValidConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(\n    blockhash: Blockhash,\n    rawConfig?: IsBlockhashValidConfig,\n  ): Promise<RpcResponseAndContext<boolean>> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs(\n      [blockhash],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to determine if the blockhash `' + blockhash + '`is valid',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = process.env.TEST_LIVE ? 3762 : 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import { Auth, LoginOptions, UserInfo, rpcUrl } from '@particle-network/auth';\nimport { Connection, ConnectionConfig, PublicKey, Transaction } from '@solana/web3.js';\nimport bs58 from 'bs58';\nimport { Buffer } from 'buffer';\nimport { EventEmitter } from 'events';\nimport { ISolanaWallet } from './types';\nimport { getVersion } from './utils';\n\nexport class SolanaWallet implements ISolanaWallet {\n    public readonly isParticleNetwork = true;\n\n    name = 'Particle';\n    url = 'https://particle.network';\n    icon = 'https://static.particle.network/wallet-icons/Particle.png';\n\n    private _publicKey: PublicKey | null;\n\n    private _connecting: boolean;\n\n    private events = new EventEmitter();\n\n    constructor(private auth: Auth) {\n        this.auth = auth;\n        this._connecting = false;\n\n        const userInfo = this.auth.getUserInfo();\n        if (userInfo) {\n            const wallet = userInfo.wallets.find((w) => w.chain_name === 'solana' && w.public_address.length > 0);\n            if (wallet) {\n                this._publicKey = new PublicKey(wallet.public_address);\n            } else {\n                this._publicKey = null;\n            }\n        } else {\n            this._publicKey = null;\n        }\n\n        this.auth.on('connect', (userInfo: UserInfo) => {\n            const wallet = userInfo.wallets.find((w) => w.chain_name === 'solana' && w.public_address.length > 0);\n            if (wallet) {\n                this._publicKey = new PublicKey(wallet.public_address);\n                this.events.emit('connect', this._publicKey);\n            }\n        });\n        this.auth.on('disconnect', () => {\n            this._publicKey = null;\n            this.events.emit('disconnect');\n        });\n        if (typeof window !== 'undefined' && window.particle) {\n            window.particle.solanaWallet = this;\n        }\n    }\n\n    get version() {\n        return getVersion();\n    }\n\n    on(event: string, listener: any): void {\n        this.events.on(event, listener);\n    }\n\n    once(event: string, listener: any): void {\n        this.events.once(event, listener);\n    }\n\n    off(event: string, listener: any): void {\n        this.events.off(event, listener);\n    }\n\n    removeListener(event: string, listener: any): void {\n        this.events.removeListener(event, listener);\n    }\n\n    get connecting(): boolean {\n        return this._connecting;\n    }\n\n    get connected(): boolean {\n        return this._publicKey !== null;\n    }\n\n    get publicKey(): PublicKey | null {\n        return this._publicKey;\n    }\n\n    public async connect(config?: LoginOptions): Promise<void> {\n        try {\n            this._connecting = true;\n            let wallet = this.auth.getWallet();\n            if (wallet) {\n                this._publicKey = new PublicKey(wallet.public_address);\n                return Promise.resolve();\n            }\n            await this.auth.login(config);\n            wallet = this.auth.getWallet();\n            if (wallet) {\n                this._publicKey = new PublicKey(wallet.public_address);\n                return Promise.resolve();\n            } else {\n                return Promise.reject('wallet create failed');\n            }\n        } catch (e) {\n            return Promise.reject(e);\n        } finally {\n            this._connecting = false;\n        }\n    }\n\n    public async disconnect(): Promise<void> {\n        await this.auth.logout();\n        this._publicKey = null;\n        return Promise.resolve();\n    }\n\n    public async signTransaction(transaction: Transaction): Promise<Transaction> {\n        const signature = await this.auth.sign(\n            'signTransaction',\n            bs58.encode(transaction.serialize({ requireAllSignatures: false, verifySignatures: false }))\n        );\n        return Transaction.from(Buffer.from(signature, 'base64'));\n    }\n\n    public async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n        const signatures = await this.auth.signAllTransactions(\n            transactions.map((tx) =>\n                bs58.encode(tx.serialize({ requireAllSignatures: false, verifySignatures: false }))\n            )\n        );\n        return signatures.map((signed: string) => Transaction.from(Buffer.from(signed, 'base64')));\n    }\n\n    public async signAndSendTransaction(transaction: Transaction): Promise<string> {\n        return this.auth.sendTransaction(\n            bs58.encode(transaction.serialize({ requireAllSignatures: false, verifySignatures: false }))\n        );\n    }\n\n    public async signMessage(message: Uint8Array): Promise<Uint8Array> {\n        const signature = await this.auth.sign('signMessage', bs58.encode(message));\n        return Buffer.from(signature, 'base64');\n    }\n\n    public getConnection(config?: ConnectionConfig): Connection {\n        const url = `${rpcUrl()}/solana`;\n        return new Connection(\n            `${url}?chainId=${this.auth.getChainId()}&projectUuid=${this.auth.config.projectId}&projectKey=${\n                this.auth.config.clientKey\n            }`,\n            {\n                commitment: config?.commitment,\n                wsEndpoint: config?.wsEndpoint,\n                httpHeaders: {\n                    Authorization: this.auth.basicCredentials(),\n                },\n                fetch: config?.fetch,\n                fetchMiddleware: config?.fetchMiddleware,\n                disableRetryOnRateLimit: config?.disableRetryOnRateLimit,\n                confirmTransactionInitialTimeout: config?.confirmTransactionInitialTimeout,\n            }\n        );\n    }\n}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["require","buffer_1","checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","Buffer","from","buffer","byteOffset","length","Layout","constructor","span","property","Number","isInteger","makeDestinationObject","getSpan","offset","RangeError","replicate","rv","Object","create","prototype","assign","fromArray","values","nameWithProperty","name","lo","bindConstructorLayout","Class","layout","hasOwnProperty","call","Error","layout_","boundConstructor_","defineProperty","value","encode","writable","decode","ExternalLayout","isCount","GreedyCount","elementSpan","rem","Math","floor","src","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","idx","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","exports","base64","ieee754","customInspectSymbol","Symbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","typedArraySupport","arr","proto","foo","setPrototypeOf","createBuffer","buf","arg","encodingOrOffset","allocUnsafe","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","byteLength","actual","fromArrayLike","array","arrayView","obj","isBuffer","len","numberIsNaN","type","data","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","end","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","console","error","enumerable","get","poolSize","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","hi","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","maxBytes","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","limit","sub","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","code","charCodeAt","errors","E","sym","getMessage","Base","super","configurable","stack","message","addNumericalSeparator","checkBounds","range","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","abs","INVALID_BASE64_RE","base64clean","units","Infinity","leadSurrogate","byteArray","c","toByteArray","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","_Buffer","base","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","log","iFACTOR","source","zeroes","pbegin","pend","b58","carry","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","module","toBigIntLE","reversed","reverse","hex","toBigIntBE","toBufferLE","num","width","padStart","toBufferBE","__createBinding","o","k","k2","__setModuleDefault","__decorate","decorators","key","desc","d","r","getOwnPropertyDescriptor","Reflect","decorate","__importStar","mod","__esModule","result","__importDefault","deserializeUnchecked","deserialize","serialize","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","ResolvedTextDecoder","TextDecoder","textDecoder","fatal","default","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","fieldName","splice","join","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","toArray","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","item","kind","forEach","serializeStruct","borshSerialize","structSchema","map","field","Writer","deserializeField","reader","option","Map","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","basex","uuid","generateRequest","ClientBrowser","callServer","options","reviver","replacer","generator","version","notificationIdNull","request","method","params","id","callback","self","isBatch","isRaw","hasCallback","err","JSON","stringify","response","_parseResponse","responseText","parse","isError","isNotError","filter","jsonrpc","_interopRequireDefault","_regenerator","_asyncToGenerator2","_typeof2","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_eventemitter","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","NewTarget","construct","sham","Proxy","__rest","s","t","p","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","_EventEmitter","_super","webSocketFactory","_this","address","_a","generate_request_id","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","socket","timeout","ws_opts","_this2","Promise","resolve","reject","send","promise","setTimeout","_login","mark","_callee","resp","wrap","_context","prev","next","sent","abrupt","stop","login","_x","_listMethods","_callee2","_context2","listMethods","_this3","_subscribe","_callee3","event","_context3","subscribe","_x2","_unsubscribe","_callee4","_context4","unsubscribe","_x3","close","_this4","clearTimeout","addEventListener","emit","_ref","notification","listeners","keys","then","_ref2","reason","EventEmitter","_default","WebSocketBrowserImpl","protocols","window","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","cb","listener","has","prefix","Events","EE","context","once","addListener","emitter","evt","_events","_eventsCount","clearEvent","__proto__","eventNames","events","names","handlers","l","ee","listenerCount","a1","a2","a3","a4","a5","removeListener","on","removeAllListeners","off","prefixed","_assertThisInitialized","ReferenceError","asyncGeneratorStep","gen","_next","_throw","info","done","_asyncToGenerator","_classCallCheck","instance","Constructor","toPropertyKey","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_getPrototypeOf","getPrototypeOf","_inherits","subClass","superClass","_typeof","assertThisInitialized","_possibleConstructorReturn","_regeneratorRuntime","iterator","asyncIterator","u","toStringTag","define","Generator","Context","makeInvokeMethod","tryCatch","h","f","GeneratorFunction","GeneratorFunctionPrototype","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","_sent","dispatchException","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","awrap","async","pop","rval","handle","complete","finish","delegateYield","_setPrototypeOf","_toPrimitive","hint","prim","_toPropertyKey","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","number","isSafeInteger","lengths","hash","outputLen","blockLen","exists","checkFinished","destroyed","finished","output","crypto","u8a","u32","Uint32Array","createView","DataView","rotr","isLE","TextEncoder","toBytes","concatBytes","arrays","pad","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","update","digest","tmp","randomBytes","bytesLength","getRandomValues","setBigUint64","view","_32n","_u32_max","wh","wl","setUint32","SHA2","padOffset","take","process","dataView","roundClean","digestInto","oview","outLen","state","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","_1n","_2n","hexes","_","bytesToHex","hexToNumber","hexToBytes","hexByte","byte","bytesToNumberBE","bytesToNumberLE","numberToBytesBE","numberToBytesLE","ensureBytes","title","expectedLength","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reseed","seed","sl","genUntil","pred","validatorFns","bigint","function","boolean","stringOrUint8Array","object","Fp","isValid","validateObject","validators","optValidators","checkField","isOptional","checkVal","entries","_0n","_3n","_4n","_5n","_8n","power","modulo","pow2","invert","q","gcd","tonelliShanks","P","legendreC","Q","S","Z","p1div4","root","eql","sqr","Q1div2","neg","ONE","ZERO","t2","ge","FpSqrt","c1","n2","nv","isNegativeLE","FIELD_FIELDS","validateField","initial","ORDER","MASK","BYTES","BITS","opts","FpPow","FpInvertBatch","nums","lastMultiplied","is0","inverted","inv","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","bitLen","redef","sqrtP","freeze","isOdd","lhs","rhs","div","sqrN","addN","subN","mulN","sqrt","invertBatch","cmov","fromBytes","FpSqrtEven","elm","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","mapHashToField","fieldLen","minLen","reduced","wNAF","constTimeNegate","condition","negate","W","windows","windowSize","unsafeLadder","double","precomputeWindow","points","precomputes","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","CURVE_ORDER","prehash","cHash","cofactor","modP","ctx","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","isPoint","other","Point","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","toInv","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","left","right","XY","ZT","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","z","ax","ay","zz","clearCofactor","fromHex","normed","lastByte","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","toHex","modN","modN_LE","hashed","head","pointBytes","getPublicKey","hashDomainToScalar","msgs","sign","R","verifyOpts","verify","sig","publicKey","SB","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","x2","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","ELL2_C1","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","W2","s0","s1","sigma1","sigma0","sha256","StructError","failure","failures","cached","rest","path","_cached","isIterable","isObject","print","shiftIterator","toFailure","struct","branch","refinement","toFailures","run","coerce","coercer","valid","validator","ts","Set","refiner","Struct","assert","is","validate","tuples","tuple","any","Element","literal","constant","description","never","nullable","optional","record","Key","Value","Elements","Never","Structs","unknown","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","writeInto","bufferOut","xofInto","xof","keccak_256","HMAC","_key","assertHash","iHash","oHash","assertExists","assertBytes","hmac","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","shl","rhl","rl","weierstrassPoints","_c","_isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","assertPrjPoint","px","py","pz","privateKey","hasEvenY","U1","U2","b3","t0","t1","t3","t4","t5","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","bits2int","bits2int_modN","lowS","weierstrass","compressedLen","uncompressedLen","isValidFieldElement","invN","cat","isYOdd","isHeadOdd","numToNByteStr","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","isProbPub","getSharedSecret","privateA","publicB","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","signature","sg","_sig","derError","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b6","b9","b11","b22","b44","b88","b176","b220","b223","secp256k1","b1","POW_2_128","c2","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","properties","SOLANA_SCHEMA","decodeUnchecked","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","_Symbol$toStringTag","PublicKey","decoded","bs58","BN","unique","eq","toBase58","toArrayLike","zeroPad","createWithSeed","fromPublicKey","programId","publicKeyBytes","createProgramAddressSync","seeds","createProgramAddress","findProgramAddressSync","nonce","seedsWithNonce","findProgramAddress","pubkeyData","pubkey","_class","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","authorized","lockup","voteInit","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","compile","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","Message","accountKeys","recentBlockhash","indexToProgramIds","account","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","programIds","nonProgramIds","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","lookup","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","_compile","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","encodeDecode","bigInt","blob","bigIntLayout","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","createAccount","lamports","space","fromPubkey","newAccountPubkey","transfer","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","createNonceAccount","noncePubkey","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","newAuthorizedPubkey","allocate","CHUNK_SIZE","Loader","getMinNumSignatures","chunkSize","load","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","currentSlot","getSlot","slot","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","fetchImpl","fetch","RpcWebSocketClient","RpcWebSocketCommonClient","url","rpc","createRpc","underlyingSocket","readyState","notify","decodeData","typeIndex","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","test","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","total","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","agent","fetchWithMiddleware","init","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","waitTime","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitmentOrConfig","wsEndpoint","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","fastStableStringify$1","unsafeRes","confirmTransactionInitialTimeout","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","getBalance","catch","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","ownerAddress","_args","getParsedTokenAccountsByOwner","getLargestAccounts","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getMultipleParsedAccounts","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configOrCommitment","configWithoutEncoding","baseSchema","withContext","getParsedProgramAccounts","strategy","rawSignature","decodedSignature","aborted","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","getClusterNodes","getVoteAccounts","getSlotLeader","getSlotLeaders","startSlot","getSignatureStatuses","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getInflationRate","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getRecentBlockhashAndContext","getRecentPerformanceSamples","getFeeCalculatorForBlockhash","wireMessage","getRecentPrioritizationFees","lockedWritableAccounts","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","isBlockhashValid","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","transactionDetails","getParsedBlock","getBlockProduction","extra","getTransaction","getParsedTransaction","getParsedTransactions","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","getSignaturesForAddress","getAddressLookupTable","accountInfo","getNonce","requestAirdrop","_blockhashWithExpiryBlockHeight","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","clientSubscriptionId","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","Keypair","keypair","_keypair","generate","fromSecretKey","skipValidation","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","createLookupTable","lookupTableAddress","bumpSeed","recentSlot","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","microLamports","PRIVATE_KEY_BYTES$1","PUBLIC_KEY_BYTES$1","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","ecdsaSign","publicKeyCreate","PRIVATE_KEY_BYTES","ETHEREUM_ADDRESS_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","_class2","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","StakeProgram","initialize","stakePubkey","maybeLockup","staker","withdrawer","authorize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorizeWithSeed","authorityBase","authoritySeed","authorityOwner","splitInstruction","splitStakePubkey","splitWithSeed","merge","sourceStakePubKey","withdraw","deactivate","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","Voter","VoteProgram","initializeAccount","authorizedVoter","authorizedWithdrawer","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","authorizedWithdrawerPubkey","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","website","details","keybaseUsername","packages","init_package","__toCommonJS","package_exports","SolanaWallet","auth","isParticleNetwork","icon","_connecting","userInfo","getUserInfo","wallet","wallets","w","chain_name","public_address","_publicKey","userInfo2","particle","solanaWallet","connecting","connected","__async","getWallet","disconnect","logout","signTransaction","Buffer2","signAllTransactions","tx","signed","signAndSendTransaction","signMessage","getConnection","rpcUrl","getChainId","projectId","clientKey","Authorization","basicCredentials","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","decoderError","opt_code_point","Decoder","Encoder","handler","stream","bite","code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","UTF8Encoder","temp","input_stream","opt_string"],"sourceRoot":""}